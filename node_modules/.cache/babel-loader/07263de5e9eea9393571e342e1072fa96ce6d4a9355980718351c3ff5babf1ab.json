{"ast":null,"code":"var _jsxFileName = \"/Users/abeldula/reactjsprojecttodo/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\n/*\nimport React, { useState } from 'react'\n\nexport const TodoForm = ({ addTodo }) => {\n  const [value, setValue] = useState('')\n  const [showPriority, setShowPriority] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (value) {\n      addTodo({\n        id: Math.floor(Math.random() * 10000),\n        task: value,\n        completed: false,\n        priority: showPriority ? prompt('Enter priority level (1-5): ') : null,\n      })\n\n      setValue('')\n      setShowPriority(false)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"TodoForm\">\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        className=\"todo-input\"\n        placeholder=\"What is the task today?\"\n      />\n      <button type=\"submit\" className=\"todo-btn\">\n        Add Task\n      </button>\n      <button type=\"button\" onClick={() => setShowPriority(!showPriority)}>\n        Priority\n      </button>\n    </form>\n  )\n}\n*/\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoForm = _ref => {\n  _s();\n  let {\n    addTodo\n  } = _ref;\n  const [value, setValue] = useState('');\n  const handleSubmit = e => {\n    // prevent default action\n    e.preventDefault();\n    if (value) {\n      // add todo\n      addTodo(value);\n      // clear form after submission\n      setValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"TodoForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      className: \"todo-input\",\n      placeholder: \"What is the task today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"todo-btn\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","_ref","_s","addTodo","value","setValue","handleSubmit","e","preventDefault","onSubmit","className","children","type","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abeldula/reactjsprojecttodo/src/components/TodoForm.js"],"sourcesContent":["/*\nimport React, { useState } from 'react'\n\nexport const TodoForm = ({ addTodo }) => {\n  const [value, setValue] = useState('')\n  const [showPriority, setShowPriority] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (value) {\n      addTodo({\n        id: Math.floor(Math.random() * 10000),\n        task: value,\n        completed: false,\n        priority: showPriority ? prompt('Enter priority level (1-5): ') : null,\n      })\n\n      setValue('')\n      setShowPriority(false)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"TodoForm\">\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        className=\"todo-input\"\n        placeholder=\"What is the task today?\"\n      />\n      <button type=\"submit\" className=\"todo-btn\">\n        Add Task\n      </button>\n      <button type=\"button\" onClick={() => setShowPriority(!showPriority)}>\n        Priority\n      </button>\n    </form>\n  )\n}\n*/\nimport React, {useState} from 'react'\n\nexport const TodoForm = ({addTodo}) => {\n    const [value, setValue] = useState('');\n\n    const handleSubmit = (e) => {\n      // prevent default action\n        e.preventDefault();\n        if (value) {\n          // add todo\n          addTodo(value);\n          // clear form after submission\n          setValue('');\n        }\n      };\n  return (\n    <form onSubmit={handleSubmit} className=\"TodoForm\">\n    <input type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} className=\"todo-input\" placeholder='What is the task today?' />\n    <button type=\"submit\" className='todo-btn'>Add Task</button>\n      \n  </form>\n  )\n}\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACEA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIJ,KAAK,EAAE;MACT;MACAD,OAAO,CAACC,KAAK,CAAC;MACd;MACAC,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EACL,oBACEN,OAAA;IAAMU,QAAQ,EAAEH,YAAa;IAACI,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAClDZ,OAAA;MAAOa,IAAI,EAAC,MAAM;MAACR,KAAK,EAAEA,KAAM;MAACS,QAAQ,EAAGN,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACO,MAAM,CAACV,KAAK,CAAE;MAACM,SAAS,EAAC,YAAY;MAACK,WAAW,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC3IpB,OAAA;MAAQa,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEvD;AAET,CAAC;AAAAjB,EAAA,CApBYF,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}