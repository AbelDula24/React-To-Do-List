{"ast":null,"code":"/*\nimport React, { useState } from \"react\";\nimport { Todo } from \"./Todo\";\nimport { TodoForm } from \"./TodoForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { EditTodoForm } from \"./EditTodoForm\";\n\nexport const TodoWrapper = () => {\n  const [todos, setTodos] = useState([]);\n\n  \n  const addTodo = (todo) => {\n    setTodos([\n      ...todos,\n      { id: uuidv4(), task: todo, completed: false, isEditing: false },\n    ]);\n  }\n\n  const deleteTodo = (id) => setTodos(todos.filter((todo) => todo.id !== id));\n\n  const toggleComplete = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  }\n\n  \n  const displayCompletionMessage = (todo) => {\n    const completedTodos = todos.filter((todo) => todo.completed);\n    if(completedTodos.length === todos.length){\n      alert(\"WOWWWWWWW YOU FINSIHED YOUR TASKS\");\n    }\n  }\n  \n\n  const editTodo = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n      )\n    );\n  }\n\n  const editTask = (task, id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\n      )\n    );\n  };\n\n  const addTodo = (todo, priority) => {\n    setTodos([\n      ...todos,\n      { id: uuidv4(), task: todo, completed: false, isEditing: false, priority },\n    ]);\n  };\n\n\n  /\n  const priorityRank = (id) =>{\n    setTodos(\n      todos.map((todo) =>\n      todo.id === id ? { ...todo, task , }\n    )\n  }\n//\n  return (\n    <div className=\"TodoWrapper\">\n      <h1> Tasks for Today! </h1>\n      <TodoForm addTodo={addTodo} />\n      {}\n      {todos.map((todo) =>\n        todo.isEditing ? (\n          <EditTodoForm editTodo={editTask} task={todo} />\n        ) : (\n          <Todo\n            key={todo.id}\n            task={todo}\n            deleteTodo={deleteTodo}\n            editTodo={editTodo}\n            toggleComplete={toggleComplete}\n           \n          />\n        )\n      )}\n    </div>\n  );\n};\n\n*/","map":{"version":3,"names":[],"sources":["/Users/abeldula/reactjsprojecttodo/src/components/TodoWrapper.js"],"sourcesContent":["/*\nimport React, { useState } from \"react\";\nimport { Todo } from \"./Todo\";\nimport { TodoForm } from \"./TodoForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { EditTodoForm } from \"./EditTodoForm\";\n\nexport const TodoWrapper = () => {\n  const [todos, setTodos] = useState([]);\n\n  \n  const addTodo = (todo) => {\n    setTodos([\n      ...todos,\n      { id: uuidv4(), task: todo, completed: false, isEditing: false },\n    ]);\n  }\n\n  const deleteTodo = (id) => setTodos(todos.filter((todo) => todo.id !== id));\n\n  const toggleComplete = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  }\n\n  \n  const displayCompletionMessage = (todo) => {\n    const completedTodos = todos.filter((todo) => todo.completed);\n    if(completedTodos.length === todos.length){\n      alert(\"WOWWWWWWW YOU FINSIHED YOUR TASKS\");\n    }\n  }\n  \n\n  const editTodo = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n      )\n    );\n  }\n\n  const editTask = (task, id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\n      )\n    );\n  };\n\n  const addTodo = (todo, priority) => {\n    setTodos([\n      ...todos,\n      { id: uuidv4(), task: todo, completed: false, isEditing: false, priority },\n    ]);\n  };\n\n\n  /\n  const priorityRank = (id) =>{\n    setTodos(\n      todos.map((todo) =>\n      todo.id === id ? { ...todo, task , }\n    )\n  }\n//\n  return (\n    <div className=\"TodoWrapper\">\n      <h1> Tasks for Today! </h1>\n      <TodoForm addTodo={addTodo} />\n      {}\n      {todos.map((todo) =>\n        todo.isEditing ? (\n          <EditTodoForm editTodo={editTask} task={todo} />\n        ) : (\n          <Todo\n            key={todo.id}\n            task={todo}\n            deleteTodo={deleteTodo}\n            editTodo={editTodo}\n            toggleComplete={toggleComplete}\n           \n          />\n        )\n      )}\n    </div>\n  );\n};\n\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}